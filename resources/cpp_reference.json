[{"name":"bitsetconstructors","category":"c++bitsets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppbitset/bitset_constructors.html","description":"create new bitsets"},{"name":"bitsetoperators","category":"c++bitsets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppbitset/biset_operators.html","description":"compare and assign bitsets"},{"name":"vectorconstructors","category":"","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/vector_constructors.html","description":"create vectors and initialize      them with some data"},{"name":"containerconstructors","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/container_constructors2.html","description":"create containers and initialize      them with some data"},{"name":"containerconstructors","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/container_constructors2.html","description":"create containers and initialize      them with some data"},{"name":"containerconstructors&destructors","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/container_constructors.html","description":"default methods to allocate, copy,      and deallocate containers"},{"name":"containerconstructors&destructors","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/container_constructors.html","description":"default methods to allocate, copy,      and deallocate multisets"},{"name":"mapconstructors&destructors","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/map_constructors.html","description":"default methods to allocate, copy,      and deallocate maps"},{"name":"multimapconstructors&destructors","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/multimap_constructors.html","description":"default methods to allocate, copy,      and deallocate containers"},{"name":"containeroperators","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/container_operators.html","description":"assign and compare containers"},{"name":"containeroperators","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/container_operators.html","description":"assign and compare containers"},{"name":"containeroperators","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/container_operators.html","description":"assign and compare containers"},{"name":"multimapoperators","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/multimap_operators.html","description":"assign and compare containers"},{"name":"vectoroperators","category":"","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/vector_operators.html","description":"compare, assign, and access      elements of a vector"},{"name":"containeroperators","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/container_operators.html","description":"compare, assign, and access      elements of a container"},{"name":"i/oconstructors","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/constructors.html","description":"constructors"},{"name":"mapoperators","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/map_operators.html","description":"assign, compare, and access      elements of a map"},{"name":"priorityqueueconstructors","category":"c++priorityqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpppriority_queue/priority_queue_contstruct.html","description":"construct a new priority queue"},{"name":"queueconstructor","category":"c++queues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppqueue/queue_constructor.html","description":"construct a new queue"},{"name":"stackconstructors","category":"c++stacks","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstack/stack_constructors.html","description":"construct a new stack"},{"name":"stringconstructors","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/string_constructors.html","description":"create strings from arrays of      characters and other strings"},{"name":"stringoperators","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/string_operators.html","description":"concatenate strings, assign      strings, use strings for i/o, compare strings"},{"name":"accumulate","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/accumulate.html","description":"sum up a range of elements"},{"name":"adjacent_difference","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/adjacent_difference.html","description":"compute the differences between      adjacent elements in a range"},{"name":"adjacent_find","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/adjacent_find.html","description":"finds two items that are adjacent      to eachother"},{"name":"any","category":"c++bitsets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppbitset/any.html","description":"true if any bits are set"},{"name":"append","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/append.html","description":"append characters and strings onto      a string"},{"name":"assign","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/assign.html","description":"assign elements to a container"},{"name":"assign","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/assign.html","description":"assign elements to a container"},{"name":"assign","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/assign.html","description":"assign elements to a container"},{"name":"assign","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/assign1.html","description":"give a string values from strings      of characters and other c++ strings"},{"name":"at","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/at.html","description":"returns an element at a specific      location"},{"name":"at","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/at.html","description":"returns an element at a specific      location"},{"name":"at","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/at.html","description":"returns an element at a specific      location"},{"name":"auto_ptr","category":"miscellaneousc++","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmisc/auto_ptr.html","description":"create pointers that automatically      destroy objects"},{"name":"back","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/back.html","description":"returns a reference to last element      of a container"},{"name":"back","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/back.html","description":"returns a reference to last element      of a container"},{"name":"back","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/back.html","description":"returns a reference to last element      of a container"},{"name":"back","category":"c++queues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppqueue/back.html","description":"returns a reference to last element      of a container"},{"name":"bad","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/bad.html","description":"true if an error occurred"},{"name":"begin","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/begin.html","description":"returns an iterator to the      beginning of the container"},{"name":"begin","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/begin.html","description":"returns an iterator to the      beginning of the container"},{"name":"begin","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/begin.html","description":"returns an iterator to the      beginning of the container"},{"name":"begin","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/begin.html","description":"returns an iterator to the      beginning of the container"},{"name":"begin","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/begin.html","description":"returns an iterator to the      beginning of the container"},{"name":"begin","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/begin.html","description":"returns an iterator to the      beginning of the container"},{"name":"begin","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/begin.html","description":"returns an iterator to the      beginning of the container"},{"name":"begin","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/begin.html","description":"returns an iterator to the      beginning of the container"},{"name":"binary_search","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/binary_search.html","description":"determine if an element exists in a      certain range"},{"name":"c_str","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/c_str.html","description":"returns a standard c character      array version of the string"},{"name":"capacity","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/capacity.html","description":"returns the number of elements that      the container can hold"},{"name":"capacity","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/capacity.html","description":"returns the number of elements that      the container can hold"},{"name":"clear","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/clear.html","description":"clear and set status flags"},{"name":"clear","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/clear.html","description":"removes all elements from the      container"},{"name":"clear","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/clear.html","description":"removes all elements from the      container"},{"name":"clear","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/clear.html","description":"removes all elements from the      container"},{"name":"clear","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/clear.html","description":"removes all elements from the      container"},{"name":"clear","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/clear.html","description":"removes all elements from the      container"},{"name":"clear","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/clear.html","description":"removes all elements from the      container"},{"name":"clear","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/clear.html","description":"removes all elements from the      container"},{"name":"clear","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/clear.html","description":"removes all elements from the      container"},{"name":"close","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/close.html","description":"close a stream"},{"name":"compare","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/compare.html","description":"compares two strings"},{"name":"copy","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/copy.html","description":"copies characters from a string      into an array"},{"name":"copy","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/copy.html","description":"copy some range of elements to a      new location"},{"name":"copy_backward","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/copy_backward.html","description":"copy a range of elements in      backwards order"},{"name":"copy_n","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/copy_n.html","description":"copy n elements"},{"name":"count","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/count.html","description":"returns the number of elements      matching a certain key"},{"name":"count","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/count.html","description":"returns the number of elements      matching a certain key"},{"name":"count","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/count.html","description":"returns the number of elements      matching a certain key"},{"name":"count","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/count.html","description":"returns the number of elements      matching a certain key"},{"name":"count","category":"c++bitsets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppbitset/count.html","description":"returns the number of set bits"},{"name":"count","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/count.html","description":"return the number of elements      matching a given value"},{"name":"count_if","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/count_if.html","description":"return the number of elements for      which a predicate is true"},{"name":"data","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/data.html","description":"returns a pointer to the first      character of a string"},{"name":"empty","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/empty.html","description":"true if the container has no      elements"},{"name":"empty","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/empty.html","description":"true if the container has no      elements"},{"name":"empty","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/empty.html","description":"true if the container has no      elements"},{"name":"empty","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/empty.html","description":"true if the container has no      elements"},{"name":"empty","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/empty.html","description":"true if the container has no      elements"},{"name":"empty","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/empty.html","description":"true if the container has no      elements"},{"name":"empty","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/empty.html","description":"true if the container has no      elements"},{"name":"empty","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/empty.html","description":"true if the container has no      elements"},{"name":"empty","category":"c++stacks","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstack/empty.html","description":"true if the container has no      elements"},{"name":"empty","category":"c++queues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppqueue/empty.html","description":"true if the container has no      elements"},{"name":"empty","category":"c++priorityqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpppriority_queue/empty.html","description":"true if the container has no      elements"},{"name":"end","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/end.html","description":"returns an iterator just past the      last element of a container"},{"name":"end","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/end.html","description":"returns an iterator just past the      last element of a container"},{"name":"end","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/end.html","description":"returns an iterator just past the      last element of a container"},{"name":"end","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/end.html","description":"returns an iterator just past the      last element of a container"},{"name":"end","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/end.html","description":"returns an iterator just past the      last element of a container"},{"name":"end","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/end.html","description":"returns an iterator just past the      last element of a container"},{"name":"end","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/end.html","description":"returns an iterator just past the      last element of a container"},{"name":"end","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/end.html","description":"returns an iterator just past the      last element of a container"},{"name":"eof","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/eof.html","description":"true if at the end-of-file"},{"name":"equal","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/equal.html","description":"determine if two sets of elements      are the same"},{"name":"equal_range","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/equal_range.html","description":"returns iterators to the first and      just past the last elements matching a specific key"},{"name":"equal_range","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/equal_range.html","description":"returns iterators to the first and      just past the last elements matching a specific key"},{"name":"equal_range","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/equal_range.html","description":"returns iterators to the first and      just past the last elements matching a specific key"},{"name":"equal_range","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/equal_range.html","description":"returns iterators to the first and      just past the last elements matching a specific key"},{"name":"equal_range","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/equal_range.html","description":"search for a range of elements that      are all equal to a certain element"},{"name":"erase","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/erase.html","description":"removes elements from a string"},{"name":"erase","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/erase.html","description":"removes elements from a      container"},{"name":"erase","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/erase.html","description":"removes elements from a      container"},{"name":"erase","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/erase.html","description":"removes elements from a      container"},{"name":"erase","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/erase.html","description":"removes elements from a      container"},{"name":"erase","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/erase.html","description":"removes elements from a      container"},{"name":"erase","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/erase.html","description":"removes elements from a      container"},{"name":"erase","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/erase.html","description":"removes elements from a      container"},{"name":"fail","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/fail.html","description":"true if an error occurred"},{"name":"fill","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/fill.html","description":"manipulate the default fill      character"},{"name":"fill","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/fill.html","description":"assign a range of elements a      certain value"},{"name":"fill_n","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/fill_n.html","description":"assign a value to some number of      elements"},{"name":"find","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/find.html","description":"find a value in a given range"},{"name":"find","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/find.html","description":"returns an iterator to specific      elements"},{"name":"find","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/find.html","description":"returns an iterator to specific      elements"},{"name":"find","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/find.html","description":"returns an iterator to specific      elements"},{"name":"find","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/find.html","description":"returns an iterator to specific      elements"},{"name":"find","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/find.html","description":"find characters in the string"},{"name":"find_end","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/find_end.html","description":"find the last sequence of elements      in a certain range"},{"name":"find_first_not_of","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/find_first_not_of.html","description":"find first absence of      characters"},{"name":"find_first_of","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/find_first_of.html","description":"find first occurrence of      characters"},{"name":"find_first_of","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/find_first_of.html","description":"search for any one of a set of      elements"},{"name":"find_if","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/find_if.html","description":"find the first element for which a      certain predicate is true"},{"name":"find_last_not_of","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/find_last_not_of.html","description":"find last absence of      characters"},{"name":"find_last_of","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/find_last_of.html","description":"find last occurrence of      characters"},{"name":"flags","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/flags.html","description":"access or manipulate io stream format flags"},{"name":"flip","category":"c++bitsets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppbitset/flip.html","description":"reverses the bitset"},{"name":"flush","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/flush.html","description":"empty the buffer"},{"name":"for_each","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/for_each.html","description":"apply a function to a range of      elements"},{"name":"front","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/front.html","description":"returns a reference to the first      element of a container"},{"name":"front","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/front.html","description":"returns a reference to the first      element of a container"},{"name":"front","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/front.html","description":"returns a reference to the first      element of a container"},{"name":"front","category":"c++queues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppqueue/front.html","description":"returns a reference to the first      element of a container"},{"name":"gcount","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/gcount.html","description":"number of characters read during      last input"},{"name":"generate","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/generate.html","description":"saves the result of a function in a      range"},{"name":"generate_n","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/generate_n.html","description":"saves the result of n applications      of a function"},{"name":"get","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/get.html","description":"read characters"},{"name":"getline","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/getline.html","description":"read a line of characters"},{"name":"getline","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/getline.html","description":"read data from an i/o stream into a      string"},{"name":"good","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/good.html","description":"true if no errors have      occurred"},{"name":"ignore","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/ignore.html","description":"read and discard characters"},{"name":"includes","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/includes.html","description":"returns true if one set is a subset      of another"},{"name":"inner_product","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/inner_product.html","description":"compute the inner product of two      ranges of elements"},{"name":"inplace_merge","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/inplace_merge.html","description":"merge two ordered ranges      in-place"},{"name":"insert","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/insert.html","description":"insert characters into a      string"},{"name":"insert","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/insert.html","description":"inserts elements into the      container"},{"name":"insert","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/insert.html","description":"inserts elements into the      container"},{"name":"insert","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/insert.html","description":"inserts elements into the      container"},{"name":"insert","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/insert.html","description":"insert items into a container"},{"name":"insert","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/insert.html","description":"inserts items into a container"},{"name":"insert","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/insert.html","description":"inserts items into a container"},{"name":"insert","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/insert.html","description":"insert items into a container"},{"name":"is_heap","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/is_heap.html","description":"returns true if a given range is a      heap"},{"name":"is_sorted","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/is_sorted.html","description":"returns true if a range is sorted      in ascending order"},{"name":"iter_swap","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/iter_swap.html","description":"swaps the elements pointed to by      two iterators"},{"name":"key_comp","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/key_comp.html","description":"returns the function that compares      keys"},{"name":"key_comp","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/key_comp.html","description":"returns the function that compares      keys"},{"name":"key_comp","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/key_comp.html","description":"returns the function that compares      keys"},{"name":"key_comp","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/key_comp.html","description":"returns the function that compares      keys"},{"name":"length","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/length.html","description":"returns the length of the      string"},{"name":"lexicographical_compare","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/lexicographical_compare.html","description":"returns true if one range is      lexicographically less than another"},{"name":"lexicographical_compare_3way","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/lexicographical_compare_3.html","description":"determines if one range is      lexicographically less than or greater than another"},{"name":"lower_bound","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/lower_bound.html","description":"returns an iterator to the first      element greater than or equal to a certain value"},{"name":"lower_bound","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/lower_bound.html","description":"returns an iterator to the first      element greater than or equal to a certain value"},{"name":"lower_bound","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/lower_bound.html","description":"returns an iterator to the first      element greater than or equal to a certain value"},{"name":"lower_bound","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/lower_bound.html","description":"returns an iterator to the first      element greater than or equal to a certain value"},{"name":"lower_bound","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/lower_bound.html","description":"search for the first place that a      value can be inserted while preserving order"},{"name":"make_heap","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/make_heap.html","description":"creates a heap out of a range of      elements"},{"name":"max","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/max.html","description":"returns the larger of two      elements"},{"name":"max_element","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/max_element.html","description":"returns the largest element in a      range"},{"name":"max_size","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/max_size.html","description":"returns the maximum number of      elements that the container can hold"},{"name":"max_size","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/max_size.html","description":"returns the maximum number of      elements that the container can hold"},{"name":"max_size","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/max_size.html","description":"returns the maximum number of      elements that the container can hold"},{"name":"max_size","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/max_size.html","description":"returns the maximum number of      elements that the container can hold"},{"name":"max_size","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/max_size.html","description":"returns the maximum number of      elements that the container can hold"},{"name":"max_size","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/max_size.html","description":"returns the maximum number of      elements that the container can hold"},{"name":"max_size","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/max_size.html","description":"returns the maximum number of      elements that the container can hold"},{"name":"max_size","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/max_size.html","description":"returns the maximum number of      elements that the container can hold"},{"name":"merge","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/merge.html","description":"merge two lists"},{"name":"merge","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/merge.html","description":"merge two sorted ranges"},{"name":"min","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/min.html","description":"returns the smaller of two      elements"},{"name":"min_element","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/min_element.html","description":"returns the smallest element in a      range"},{"name":"mismatch","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/mismatch.html","description":"finds the first position where two      ranges differ"},{"name":"next_permutation","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/next_permutation.html","description":"generates the next greater      lexicographic permutation of a range of elements"},{"name":"none","category":"c++bitsets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppbitset/none.html","description":"true if no bits are set"},{"name":"nth_element","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/nth_element.html","description":"put one element in its sorted      location and make sure that no elements to its left are greater      than any elements to its right"},{"name":"open","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/open.html","description":"create an input stream"},{"name":"partial_sort","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/partial_sort.html","description":"sort the first n elements of a      range"},{"name":"partial_sort_copy","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/partial_sort_copy.html","description":"copy and partially sort a range of      elements"},{"name":"partial_sum","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/partial_sum.html","description":"compute the partial sum of a range      of elements"},{"name":"partition","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/partition.html","description":"divide a range of elements into two      groups"},{"name":"peek","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/peek.html","description":"check the next input character"},{"name":"pop","category":"c++stacks","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstack/pop.html","description":"removes the top element of a      container"},{"name":"pop","category":"c++queues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppqueue/pop.html","description":"removes the top element of a      container"},{"name":"pop","category":"c++priorityqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpppriority_queue/pop.html","description":"removes the top element of a      container"},{"name":"pop_back","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/pop_back.html","description":"removes the last element of a      container"},{"name":"pop_back","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/pop_back.html","description":"removes the last element of a      container"},{"name":"pop_back","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/pop_back.html","description":"removes the last element of a      container"},{"name":"pop_front","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/pop_front.html","description":"removes the first element of the      container"},{"name":"pop_front","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/pop_front.html","description":"removes the first element of the      container"},{"name":"pop_heap","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/pop_heap.html","description":"remove the largest element from a      heap"},{"name":"precision","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/precision.html","description":"manipulate the precision of a      stream"},{"name":"prev_permutation","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/prev_permutation.html","description":"generates the next smaller      lexicographic permutation of a range of elements"},{"name":"push","category":"c++stacks","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstack/push.html","description":"adds an element to the top of the      container"},{"name":"push","category":"c++queues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppqueue/push.html","description":"adds an element to the end of the      container"},{"name":"push","category":"c++priorityqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpppriority_queue/push.html","description":"adds an element to the end of the      container"},{"name":"push_back","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/push_back.html","description":"add an element to the end of the      container"},{"name":"push_back","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/push_back.html","description":"add an element to the end of the      container"},{"name":"push_back","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/push_back.html","description":"add an element to the end of the      container"},{"name":"push_back","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/push_back.html","description":"add an element to the end of the      container"},{"name":"push_front","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/push_front.html","description":"add an element to the front of the      container"},{"name":"push_front","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/push_front.html","description":"add an element to the front of the      container"},{"name":"push_heap","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/push_heap.html","description":"add an element to a heap"},{"name":"put","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/put.html","description":"write characters"},{"name":"putback","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/putback.html","description":"return characters to a stream"},{"name":"random_sample","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/random_sample.html","description":"randomly copy elements from one      range to another"},{"name":"random_sample_n","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/random_sample_n.html","description":"sample n random elements from a      range"},{"name":"random_shuffle","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/random_shuffle.html","description":"randomly re-order elements in some      range"},{"name":"rbegin","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/rbegin.html","description":"returns a reverse_iterator to the end of the      container"},{"name":"rbegin","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/rbegin.html","description":"returns a reverse_iterator to the end of the      container"},{"name":"rbegin","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/rbegin.html","description":"returns a reverse_iterator to the end of the      container"},{"name":"rbegin","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/rbegin.html","description":"returns a reverse_iterator to the end of the      container"},{"name":"rbegin","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/rbegin.html","description":"returns a reverse_iterator to the end of the      container"},{"name":"rbegin","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/rbegin.html","description":"returns a reverse_iterator to the end of the      container"},{"name":"rbegin","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/rbegin.html","description":"returns a reverse_iterator to the end of the      container"},{"name":"rbegin","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/rbegin.html","description":"returns a reverse_iterator to the end of the      container"},{"name":"rdstate","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/rdstate.html","description":"returns the state flags of the      stream"},{"name":"read","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/read.html","description":"read data into a buffer"},{"name":"remove","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/remove.html","description":"removes elements from a list"},{"name":"remove","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/remove.html","description":"remove elements equal to certain      value"},{"name":"remove_copy","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/remove_copy.html","description":"copy a range of elements omitting      those that match a certian value"},{"name":"remove_copy_if","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/remove_copy_if.html","description":"create a copy of a range of      elements, omitting any for which a predicate is true"},{"name":"remove_if","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/remove_if.html","description":"removes elements conditionally"},{"name":"remove_if","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/remove_if.html","description":"remove all elements for which a      predicate is true"},{"name":"rend","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/rend.html","description":"returns a reverse_iterator to the beginning of the      container"},{"name":"rend","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/rend.html","description":"returns a reverse_iterator to the beginning of the      container"},{"name":"rend","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/rend.html","description":"returns a reverse_iterator to the beginning of the      container"},{"name":"rend","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/rend.html","description":"returns a reverse_iterator to the beginning of the      container"},{"name":"rend","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/rend.html","description":"returns a reverse_iterator to the beginning of the      container"},{"name":"rend","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/rend.html","description":"returns a reverse_iterator to the beginning of the      container"},{"name":"rend","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/rend.html","description":"returns a reverse_iterator to the beginning of the      container"},{"name":"rend","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/rend.html","description":"returns a reverse_iterator to the beginning of the      container"},{"name":"replace","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/replace.html","description":"replace characters in the      string"},{"name":"replace","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/replace.html","description":"replace every occurrence of some      value in a range with another value"},{"name":"replace_copy","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/replace_copy.html","description":"copy a range, replacing certain      elements with new ones"},{"name":"replace_copy_if","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/replace_copy_if.html","description":"copy a range of elements, replacing      those for which a predicate is true"},{"name":"replace_if","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/replace_if.html","description":"change the values of elements for      which a predicate is true"},{"name":"reserve","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/reserve.html","description":"sets the minimum capacity of the      container"},{"name":"reserve","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/reserve.html","description":"sets the minimum capacity of the      container"},{"name":"reset","category":"c++bitsets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppbitset/reset.html","description":"sets bits to zero"},{"name":"resize","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/resize.html","description":"change the size of the      container"},{"name":"resize","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/resize.html","description":"change the size of the      container"},{"name":"resize","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/resize.html","description":"change the size of the      container"},{"name":"resize","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/resize.html","description":"change the size of the      container"},{"name":"reverse","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/reverse.html","description":"reverse the list"},{"name":"reverse","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/reverse.html","description":"reverse elements in some range"},{"name":"reverse_copy","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/reverse_copy.html","description":"create a copy of a range that is      reversed"},{"name":"rfind","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/rfind.html","description":"find the last occurrence of a      substring"},{"name":"rotate","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/rotate.html","description":"move the elements in some range to      the left by some amount"},{"name":"rotate_copy","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/rotate_copy.html","description":"copy and rotate a range of      elements"},{"name":"search","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/search.html","description":"search for a range of elements"},{"name":"search_n","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/search_n.html","description":"search for n consecutive copies of      an element in some range"},{"name":"seekg","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/seekg.html","description":"perform random access on an input      stream"},{"name":"seekp","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/seekp.html","description":"perform random access on output      streams"},{"name":"set","category":"c++bitsets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppbitset/set.html","description":"sets bits"},{"name":"set_difference","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/set_difference.html","description":"computes the difference between two      sets"},{"name":"set_intersection","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/set_intersection.html","description":"computes the intersection of two      sets"},{"name":"set_symmetric_difference","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/set_symmetric_difference.html","description":"computes the symmetric difference      between two sets"},{"name":"set_union","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/set_union.html","description":"computes the union of two sets"},{"name":"setf","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/setf.html","description":"set format flags"},{"name":"size","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/size.html","description":"returns the number of items in the      container"},{"name":"size","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/size.html","description":"returns the number of items in the      container"},{"name":"size","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/size.html","description":"returns the number of items in the      container"},{"name":"size","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/size.html","description":"returns the number of items in the      container"},{"name":"size","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/size.html","description":"returns the number of items in the      container"},{"name":"size","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/size.html","description":"returns the number of items in the      container"},{"name":"size","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/size.html","description":"returns the number of items in the      container"},{"name":"size","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/size.html","description":"returns the number of items in the      container"},{"name":"size","category":"c++stacks","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstack/size.html","description":"returns the number of items in the      container"},{"name":"size","category":"c++queues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppqueue/size.html","description":"returns the number of items in the      container"},{"name":"size","category":"c++priorityqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpppriority_queue/size.html","description":"returns the number of items in the      container"},{"name":"size","category":"c++bitsets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppbitset/size.html","description":"number of bits that the bitset can      hold"},{"name":"sort","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/sort.html","description":"sorts a list into ascending      order"},{"name":"sort","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/sort.html","description":"sort a range into ascending      order"},{"name":"sort_heap","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/sort_heap.html","description":"turns a heap into a sorted range of      elements"},{"name":"splice","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/splice.html","description":"merge two lists in constant time"},{"name":"stable_partition","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/stable_partition.html","description":"divide elements into two groups      while preserving their relative order"},{"name":"stable_sort","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/stable_sort.html","description":"sort a range of elements while      preserving order between equal elements"},{"name":"substr","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/substr.html","description":"returns a certain substring"},{"name":"swap","category":"c++strings","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstring/swap.html","description":"swap the contents of this container      with another"},{"name":"swap","category":"c++vectors","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppvector/swap.html","description":"swap the contents of this container      with another"},{"name":"swap","category":"c++double-endedqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppdeque/swap.html","description":"swap the contents of this container      with another"},{"name":"swap","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/swap.html","description":"swap the contents of this container      with another"},{"name":"swap","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/swap.html","description":"swap the contents of this container      with another"},{"name":"swap","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/swap.html","description":"swap the contents of this container      with another"},{"name":"swap","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/swap.html","description":"swap the contents of this container      with another"},{"name":"swap","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/swap.html","description":"swap the contents of this container      with another"},{"name":"swap","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/swap.html","description":"swap the values of two objects"},{"name":"swap_ranges","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/swap_ranges.html","description":"swaps two ranges of elements"},{"name":"sync_with_stdio","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/sync_with_stdio.html","description":"synchronize with standard i/o"},{"name":"tellg","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/tellg.html","description":"read input stream pointers"},{"name":"tellp","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/tellp.html","description":"read output stream pointers"},{"name":"test","category":"c++bitsets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppbitset/test.html","description":"returns the value of a given      bit"},{"name":"to_string","category":"c++bitsets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppbitset/to_string.html","description":"string representation of the      bitset"},{"name":"to_ulong","category":"c++bitsets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppbitset/to_ulong.html","description":"returns an integer representation      of the bitset"},{"name":"top","category":"c++stacks","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppstack/top.html","description":"returns the top element of the      container"},{"name":"top","category":"c++priorityqueues","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpppriority_queue/top.html","description":"returns the top element of the      container"},{"name":"transform","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/transform.html","description":"applies a function to a range of      elements"},{"name":"unique","category":"c++lists","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cpplist/unique.html","description":"removes consecutive duplicate      elements"},{"name":"unique","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/unique.html","description":"remove consecutive duplicate      elements in a range"},{"name":"unique_copy","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/unique_copy.html","description":"create a copy of some range of      elements that contains no consecutive duplicates"},{"name":"unsetf","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/unsetf.html","description":"clear io stream format flags"},{"name":"upper_bound","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/upper_bound.html","description":"returns an iterator to the first      element greater than a certain value"},{"name":"upper_bound","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/upper_bound.html","description":"returns an iterator to the first      element greater than a certain value"},{"name":"upper_bound","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/upper_bound.html","description":"returns an iterator to the first      element greater than a certain value"},{"name":"upper_bound","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/upper_bound.html","description":"returns an iterator to the first      element greater than a certain value"},{"name":"upper_bound","category":"c++algorithms","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppalgorithm/upper_bound.html","description":"searches for the last possible      location to insert an element into an ordered range"},{"name":"value_comp","category":"c++sets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppset/value_comp.html","description":"returns the function that compares      values"},{"name":"value_comp","category":"c++multisets","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultiset/value_comp.html","description":"returns the function that compares      values"},{"name":"value_comp","category":"c++maps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmap/value_comp.html","description":"returns the function that compares      values"},{"name":"value_comp","category":"c++multimaps","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppmultimap/value_comp.html","description":"returns the function that compares      values"},{"name":"width","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/width.html","description":"access and manipulate the minimum      field width"},{"name":"write","category":"c++i/o","url":"http://faculty.virginia.edu/comp-phys/phys2660/html/references/www.cppreference.com/cppio/write.html","description":"write characters"}]